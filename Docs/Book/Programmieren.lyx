#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 417
\begin_document
\begin_header
\textclass scrbookjed
\begin_preamble
% wenn pdflatex benutzt wird:
\usepackage{ifpdf}
\ifpdf

% Schriften für bessere PDF-Ansichten
\IfFileExists{lmodern.sty}
 {\usepackage{lmodern}}{}

\fi % Ende von: wenn pdflatex benutzt wird

% Setzt den Link fuer Sprünge zu Gleitabbildungen
% auf den Anfang des Gelitobjekts und nicht aufs Ende
\usepackage[figure]{hypcap}

% Die Seiten des Inhaltsverzeichnisses werden römisch numeriert,
% ein PDF-Lesezeichen für das Inhaltsverzeichnis wird hinzugefügt
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

\newcommand{\TabBesBeg}{%
 \let\MyTable\table
 \let\MyEndtable\endtable
 \renewenvironment{table}{\begin{SCtable}}{\end{SCtable}}}

\newcommand{\TabBesEnd}{%
 \let\table\MyTable
 \let\endtable\MyEndtable}

\newcommand{\FigBesBeg}{%
 \let\MyFigure\figure
 \let\MyEndfigure\endfigure
 \renewenvironment{figure}{\begin{SCfigure}}{\end{SCfigure}}}

\newcommand{\FigBesEnd}{%
 \let\figure\MyFigure
 \let\endfigure\MyEndfigure}

% ermöglicht das Berechnen von Werten
\usepackage{calc}

% Ermöglicht besondere Tabellenzellen-Ausrichtungen
\usepackage{dcolumn}

%Vergrößert den Teil der Seite, in dem Gleitobjekte
% unten angeordnet werden dürfen
\renewcommand{\bottomfraction}{0.5}

% Vermeidet, dass Gleitobjekte vor ihrem Abschnitt gedruckt werden
\let\mySection\section\renewcommand{\section}{\suppressfloats[t]\mySection}

% beschleunigt die Berechnung von langen Tabellen
%\setcounter{LTchunksize}{100}
\makeatletter
% wird für skalierte und rotierte Boxen benötigt
\@ifundefined{rotatebox}{\usepackage{graphicx}}{}

% wird bei farbigen Tabellen benutzt
\@ifundefined{textcolor}
 {\usepackage{color}}{}
\definecolor{dunkelgruen}{cmyk}{0.5, 0, 1, 0}
\definecolor{hellgrau}{gray}{0.8}

% testen ob paket colortbl installiert ist
% wird für farbige Tabellenzellen benutzt
\newboolean{colortbl}
\IfFileExists{colortbl.sty}
 {\usepackage{colortbl}
  \setboolean{colortbl}{true}}
 {\setboolean{colortbl}{false}}

% wird für Mehrfachzeilen benutzt
\usepackage{multirow}
%\renewcommand{\multirowsetup}{\centering}

% wird fuer Tabellen im Buchstil benutzt
\usepackage{booktabs}

% wird benutzt, um Tabellenzellen zu vergrößern
\@ifundefined{extrarowheight}
 {\usepackage{array}}{}
\setlength{\extrarowheight}{2pt}
% wird fuer benutzerdefinierte Tabellen benutzt
% ---
\newcolumntype{M}[1]
 {>{\centering\hspace{0pt}}m{#1}}

\newcolumntype{S}[2]
 {>{\centering\hspace{0pt}}m{(#1+(2\tabcolsep+\arrayrulewidth)*(1-#2))/#2}}

\newcolumntype{K}[1]
 {>{\columncolor{#1}\hspace{0pt}}c}

\newcolumntype{V}{!{\vrule width 1.5pt}}

\newcolumntype{W}{!{\color{green}\vline}}
% ---

% Setzt einen zusaetzlichen Abstand von
% 1.5 mm zwischen Fussnoten
\let\myFoot\footnote
\renewcommand{\footnote}[1]{\myFoot{#1\vspace{1.5mm}}}

% Gleit-Algorithmen werden innerhalb von Kapiteln numeriert
%\numberwithin{algorithm}{chapter}

% Grauschrift-Notizen in blauer Farbe
%\renewenvironment{lyxgreyedout}
 %{\textcolor{blue}\bgroup}{\egroup}

% ------------------------------------
% Prüfung auf benötigte LaTeXPakete
\usepackage{ifthen}

% Pruefung auf arydshln
% für Tabellen mit gestrichelten Linien
\newboolean{arydshln}
\IfFileExists{arydshln.sty}
 {\usepackage{arydshln}
  \setboolean{arydshln}{true}}
 {\setboolean{arydshln}{false}}

% Prüfung auf marginnote
% für Randnotizen
\newboolean{marginnote}
\IfFileExists{marginnote.sty}
 {\usepackage{marginnote}
  \let\marginpar\marginnote
  \setboolean{marginnote}{true}}
 {\setboolean{marginnote}{false}}

% Prüfung auf sidecap
% für seitliche Beschriftungen
\newboolean{sidecap}
\IfFileExists{sidecap.sty}
 {\usepackage{sidecap}
  \let\marginpar\marginnote
  \setboolean{sidecap}{true}}
 {\setboolean{sidecap}{false}}

% Umdefinieren des Makros \LyX für PDF-Lesezeichen
\def\LyX{\texorpdfstring{%
  L\kern-.1667em\lower.25em\hbox{Y}\kern-.125emX\@}
  {LyX }}

% Damit der Index den Namen "Stichwortverzeichnis" erhält
\addto\captionsngerman{\renewcommand{\indexname}{Stichwortverzeichnis}}

%\usepackage{xcolor}

\usepackage{listings}

\lstdefinelanguage{CSharp}
{
 morecomment = [l]{//}, 
 morecomment = [l]{///},
 morecomment = [s]{/*}{*/},
 morestring=[b]", 
 sensitive = true,
 morekeywords = {abstract,  event,  new,  struct,
   as,  explicit,  null,  switch,
   base,  extern,  object,  this,
   bool,  false,  operator,  throw,
   break,  finally,  out,  true,
   byte,  fixed,  override,  try,
   case,  float,  params,  typeof,
   catch,  for,  private,  uint,
   char,  foreach,  protected,  ulong,
   checked,  goto,  public,  unchecked,
   class,  if,  readonly,  unsafe,
   const,  implicit,  ref,  ushort,
   continue,  in,  return,  using,
   decimal,  int,  sbyte,  virtual,
   default,  interface,  sealed,  volatile,
   delegate,  internal,  short,  void,
   do,  is,  sizeof,  while,
   double,  lock,  stackalloc,   
   else,  long,  static,   
   enum,  namespace,  string}
}

%\lstset{ %
%language=CSharp,
%showstringspaces=false,
%basicstyle=\small,
%keywordstyle=\color{blue},
%breaklines=true,
%frame=single,
%commentstyle=\color{green},
%stringstyle=\color{red},
%backgroundcolor=\color{lightgray},
%numbers=left
%}
\usepackage{floatflt}
\end_preamble
\options fleqn,liststotoc,bibtotoc,idxtotoc,BCOR7.5mm,titlepage,tablecaptionabove,DIV=15
\use_default_options false
\begin_modules
jed
jedpretty
jedgerman
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Das LyX-Handbuch der Einfügungen: Abbildungen, Tabellen, Gleitobjekte, Notizen und Boxen"
\pdf_author "LyX Team, Uwe Stöhr, deutsche Übersetzung: Hartmut Haase"
\pdf_subject "LyX-Dokumentation über Abbildungen, Tabellen, Gleitobjekte, Notizen und Boxen"
\pdf_keywords "LyX, Abbildungen, Tabellen, Gleitobjekte, Notizen, Boxen"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue,  pdfpagelayout=OneColumn, pdfnewwindow=true,  pdfstartview=XYZ, plainpages=false, pdfpagelabels"
\papersize a4paper
\use_geometry false
\use_amsmath 2
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\use_undertilde 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Stichwortverzeichnis
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language german
\papercolumns 1
\papersides 2
\paperpagestyle default
\listings_params "backgroundcolor={\color{Lavender}},basicstyle={\small\ttfamily},breaklines=true,columns=fullflexible,commentstyle={\color{green}},frame=single,keywordstyle={\color{blue}},stringstyle={\color{red}}"
\bullet 1 0 9 -1
\bullet 2 2 35 -1
\bullet 3 2 7 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict true
\html_latex_start <span class='latex'>
\html_latex_end </span>
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
setcounter{equation}{0}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
providecommand{
\backslash
Lux}{L
\backslash
kern-.1667em
\backslash
lower.25em
\backslash
hbox{U}
\backslash
kern-.125emX
\backslash
@}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
Lux{
\backslash
texorpdfstring{%
\end_layout

\begin_layout Plain Layout

L
\backslash
kern-.1667em
\backslash
lower.25em
\backslash
hbox{U}
\backslash
kern-.125emX
\backslash
@}
\end_layout

\begin_layout Plain Layout

  {LyX }} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Teil Programmieren
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float tableau
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makeatletter
\end_layout

\begin_layout Plain Layout


\backslash
lstset{language={[Sharp]C},basicstyle={
\backslash
small
\backslash
ttfamily},breaklines=true,captionpos=b,columns=fullflexible,frame=tlRB,framerule
=0pt,showspaces=false,keepspaces=true,showtabs=false,tab=
\backslash
rightarrowfill}
\end_layout

\begin_layout Plain Layout

% this is a space after comments fix.
 a half space used to suppress the
\end_layout

\begin_layout Plain Layout

% double space after c# comments.
\end_layout

\begin_layout Plain Layout

% verdammt, das sieht beschissen aus!
\end_layout

\begin_layout Plain Layout

%
\backslash
def
\backslash
lst@visiblespace{
\backslash
lst@ttfamily{
\backslash
,}} 
\end_layout

\begin_layout Plain Layout

%
\backslash
def
\backslash
lst@visiblespace{
\backslash
lst@ttfamily{
\backslash
char32}
\backslash
textvisiblespace} % is default.
\end_layout

\begin_layout Plain Layout

%
\backslash
def
\backslash
lst@visiblespace{
\backslash
_} % is default.
\end_layout

\begin_layout Plain Layout


\backslash
makeatother
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
lstset{language={[Sharp]C},basicstyle={
\backslash
small
\backslash
ttfamily},captionpos=b,framerule=0pt,keepspaces=true,commentstyle=
\backslash
bfseries}
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Todo
\end_layout

\begin_layout Standard
Links und zeusch zum bearbeiten
\begin_inset space \thinspace{}
\end_inset


\begin_inset space \space{}
\end_inset

:
\end_layout

\begin_layout Chapter
ViewModelGenerator.tt
\begin_inset Index idx
status open

\begin_layout Plain Layout
ViewModelGenerator
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
verbtocs{
\backslash
mmmtoc}|
\backslash
minitoc{}|  
\backslash
mmmBtoc{}%
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Generates data based ViewModels from a XSD-Schema file.
\end_layout

\begin_layout Section
Options:
\end_layout

\begin_layout Subsection
UseSubgroups
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public bool UseSubgroups = true;
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
SkipAllButEnums
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public bool SkipAllButEnums = false;
\end_layout

\end_inset


\end_layout

\begin_layout Description
Usage: ViewModelGenerator.tt
\end_layout

\begin_layout Standard
Debug flag, that skips all ViewModel and property generation.
\end_layout

\begin_layout Standard
Only the external enums are generated.
\end_layout

\begin_layout Subsection
UseOnDataPropertyChanged
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public bool UseOnDataPropertyChanged = true;
\end_layout

\end_inset


\end_layout

\begin_layout Description
Usage: ViewModelClassTemplate.tt, ViewModelClassModelTemplate.tt, 
\end_layout

\begin_layout Standard
ViewModelClassChoiceTemplate.tt
\end_layout

\begin_layout Standard
Generate a INotifyPropertyChanged implementation that has a virtual OnDataProper
tyChanged
\end_layout

\begin_layout Standard
method that calls a DataPropertyChanged partial method stub.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

protected virtual void OnDataPropertyChanged(object sender, System.ComponentModel.
PropertyChangedEventArgs e)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

	DataPropertyChanged(sender, e);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

partial void DataPropertyChanged(object sender, System.ComponentModel.PropertyChan
gedEventArgs e);
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
UseCollectionChanged
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public bool UseCollectionChanged = true;
\end_layout

\end_inset


\end_layout

\begin_layout Description
Usage: ViewModelClassModelTemplate.tt
\end_layout

\begin_layout Standard
Generate a Notification method stub on ObservableCollection properties.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

protected virtual void OnExclusionCollectionChanged(object sender, System.Collect
ions.Specialized.NotifyCollectionChangedEventArgs e)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

	ExclusionCollectionChanged(sender, e);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

partial void ExclusionCollectionChanged(object sender, System.Collections.Speciali
zed.NotifyCollectionChangedEventArgs e);
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
EnumProject
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public string EnumProject = null;
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
EnumFile
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public string EnumFile = null;
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
EnumNamespace
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public string EnumNamespace = null;
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
ViewModelBaseType
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public string ViewModelBaseType = "ViewModelBase";
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
CustomUsings
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public List<string> CustomUsings = new List<string>();
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Properties
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public PropertyStore Properties = new PropertyStore();
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
ListType
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public FoundElementHelper.ListType ListType = FoundElementHelper.ListType.List;
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
BaseHeaderTemplate
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public BaseHeaderTemplate BaseHeaderTemplate = new BaseHeaderTemplate();
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
BaseTemplate
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public BaseTemplate BaseTemplate = new BaseTemplate();
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
EnumTemplate
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public EnumTemplate EnumTemplate = new EnumTemplate();
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
HeaderTemplate
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public HeaderTemplate HeaderTemplate = new HeaderTemplate();
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
ViewModelClassTemplate
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public ViewModelClassTemplate ViewModelClassTemplate = new ViewModelClassTemplat
e();
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
FooterTemplate
\end_layout

\begin_layout Description
Default: 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

public FooterTemplate FooterTemplate = new FooterTemplate();
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
TDD
\end_layout

\begin_layout Standard
This Chapter contains info on Test Driven Development in the XsdT4Transforms
 project.
\end_layout

\begin_layout Section
Used XSD-Schemas
\end_layout

\begin_layout Enumerate
Elem1.xsd 
\end_layout

\begin_layout Enumerate
Elem2.xsd 
\end_layout

\begin_layout Enumerate
Elem3.xsd 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../XsdT4TransformsTests/Schemas/Elem3.png
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Elem3.xsd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Elem4.xsd 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../XsdT4TransformsTests/Schemas/Elem4.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Elem4.xsd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section
Unit Tests
\end_layout

\begin_layout Standard
Schemas in Unit Tests
\end_layout

\begin_layout Subsection
SingleComplexContentChoiceTest
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../XsdT4TransformsTests/Schemas/SingleComplexContentChoiceTest.png
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
SingleComplexContentChoiceTest Element Schema
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Beste Praktiken
\end_layout

\begin_layout Chapter
Sprachreferenz
\end_layout

\begin_layout Chapter
Coding Guideline
\begin_inset Index idx
status open

\begin_layout Plain Layout
Coding Guideline
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{language={[Sharp]C},basicstyle={
\backslash
small
\backslash
ttfamily},captionpos=b,columns=fullflexible,frame=tlRB,showspaces=true,keepspace
s=true,framerule=0pt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makeatletter
\end_layout

\begin_layout Plain Layout


\backslash
lstset{language={[Sharp]C},basicstyle={
\backslash
small
\backslash
ttfamily},breaklines=true,captionpos=b,columns=fullflexible,frame=tlRB,framerule
=0pt,showspaces=false,keepspaces=true,showtabs=true,tab=
\backslash
rightarrowfill}
\end_layout

\begin_layout Plain Layout

% this is a space after comments fix.
 a half space used to suppress the
\end_layout

\begin_layout Plain Layout

% double space after c# comments.
\end_layout

\begin_layout Plain Layout

% verdammt, das sieht beschissen aus!
\end_layout

\begin_layout Plain Layout

%
\backslash
def
\backslash
lst@visiblespace{
\backslash
lst@ttfamily{
\backslash
,}} 
\end_layout

\begin_layout Plain Layout

%
\backslash
def
\backslash
lst@visiblespace{
\backslash
lst@ttfamily{
\backslash
char32}
\backslash
textvisiblespace} % is default.
\end_layout

\begin_layout Plain Layout

%
\backslash
def
\backslash
lst@visiblespace{
\backslash
_} % is default.
\end_layout

\begin_layout Plain Layout


\backslash
makeatother
\end_layout

\end_inset


\end_layout

\begin_layout Section
Benutzerschnittstelle zum Code
\end_layout

\begin_layout Subsection
Listen
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

/// <summary>
\end_layout

\begin_layout Plain Layout

/// Represents the method that will handle an event of altering the size
 in
\end_layout

\begin_layout Plain Layout

/// a <see cref="DrawableBase"/> type.
\end_layout

\begin_layout Plain Layout

/// </summary>
\end_layout

\begin_layout Plain Layout

/// <param name="sender">The source of the event.</param>
\end_layout

\begin_layout Plain Layout

/// <param name="e">
\end_layout

\begin_layout Plain Layout

/// The <see cref="SizeEventArgs"/> instance containing the event data.
\end_layout

\begin_layout Plain Layout

/// </param>
\end_layout

\begin_layout Plain Layout

public delegate void SizeEventHandler(object sender, SizeEventArgs e);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
lstinputlisting{/listings/afterex.cs}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
