<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib" 
                    xmlns:controls="clr-namespace:Jedzia.BackBock.CustomControls.NavBar">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
        <!--<ResourceDictionary Source="pack://application:,,,/Jedzia.BackBock.CustomControls;component/NavBar/Colors.xaml"/>-->
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="HeaderedContentControl" x:Key="NavBarItem-HeaderedContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedContentControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
                    <StackPanel>
                        <ContentPresenter 
                            Content="{TemplateBinding HeaderedContentControl.Header}" 
                            ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" 
                            ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" 
                            ContentSource="Header" />
                        <ContentPresenter 
                            Content="{TemplateBinding ContentControl.Content}" 
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <HierarchicalDataTemplate ItemsSource="{Binding Children}" x:Key="RootNodeTreeViewDataTemplate" 
                              DataType="controls:Node">
        <!--BorderBrush="Black" BorderThickness="1"-->
            <Border x:Name="bd" BorderBrush="Black" BorderThickness="1" >
                <StackPanel Orientation="Horizontal" >
                    <!--<TextBlock Text="{Binding Path=ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"/>-->
                    <!--<TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TreeViewItem}},Path=ActualWidth}"/>-->
                    <TextBlock x:Name="tb" Text="{Binding Text}" />
                </StackPanel>
            </Border>
        <HierarchicalDataTemplate.Triggers>
            <!--<Trigger Property="IsMouseOver" SourceName="tb" Value="True">
    			<Setter Property="Margin" TargetName="tb" Value="5,0,0,0"/>
    		</Trigger>-->
            <!-- controls:RootNodeTreeView.IsRootNode -->
            <Trigger Property="Tag" Value="IsRootNode">
                <Setter TargetName="tb" Property="Foreground"  Value="{StaticResource NavBarTreeHeaderForeBrush}"/>
            </Trigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>


    <ControlTemplate TargetType="ToggleButton" x:Key="RootNodeTreeViewToggleButtonCT">
        <Border Background="#00FFFFFF" Width="19" Height="13">
            <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="#FF7898B5" Width="9" Height="9" SnapsToDevicePixels="True">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="#FFFFFFFF" Offset="0.2" />
                            <GradientStop Color="#FFC0B7A6" Offset="1" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Border.Background>
                <Path Data="M0,2L0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2z" Fill="#FF000000" Name="ExpandPath" Margin="1,1,1,1" />
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked">
                <Setter Property="Path.Data" TargetName="ExpandPath">
                    <Setter.Value>
                        <StreamGeometry>M0,2L0,3 5,3 5,2z</StreamGeometry>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ToggleButton" x:Key="{x:Static controls:CustomResources.RootNodeTreeViewToggleButtonKey}">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="UIElement.Focusable">
            <Setter.Value>
                <s:Boolean>False</s:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.Width">
            <Setter.Value>
                <s:Double>19</s:Double>
            </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.Height">
            <Setter.Value>
                <s:Double>13</s:Double>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template" Value="{StaticResource RootNodeTreeViewToggleButtonCT}"/>
    </Style>

    <!-- HERE I AM-->

    <ControlTemplate TargetType="TreeViewItem" x:Key="RootNodeTreeViewItemContainerStyleTemplate">
        <StackPanel Margin="2,2,0,0" Name="panel">
            <WrapPanel Name="item" >
                <!-- 
                Style="{StaticResource RootNodeTreeViewToggleButton}" 
                Style="{DynamicResource NuclearTreeViewItemToggleButton}" 
                -->
                <ToggleButton Name="expander"
                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded}"                                                      
                              Style="{DynamicResource {x:Static controls:CustomResources.RootNodeTreeViewToggleButtonKey}}" />
                <ContentPresenter x:Name="PART_Header" Margin="4,0,0,0"
                                              ContentSource="Header" />
            </WrapPanel>
            <Border>
                <ItemsPresenter Name="children" Visibility="Collapsed" Margin="4,0,0,0"/>
            </Border>
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="item" Property="Background"  Value="Green"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <!--<Condition Property="controls:RootNodeTreeView.IsRootNode" Value="False"/>-->
                </MultiTrigger.Conditions>
                <Setter TargetName="item" Property="Background"  
                        Value="{DynamicResource SelectedBackgroundBrush}"/>
            </MultiTrigger>
            <Trigger Property="controls:RootNodeTreeView.IsRootNode" Value="True">
                <Setter TargetName="item" Property="Background"  Value="{DynamicResource {x:Static controls:CustomResources.NavBarTreeHeaderBackBrushKey}}"/>
                <Setter TargetName="item" Property="Height"  Value="20"/>
                <Setter TargetName="PART_Header" Property="Tag"  Value="IsRootNode"/>
            </Trigger>
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="controls:RootNodeTreeView.IsRootNode" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="item" Property="Background"  Value="{DynamicResource ResourceKey={x:Static SystemColors.HighlightBrushKey}}"/>
            </MultiTrigger>-->
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="children" Property="Visibility"  Value="Visible"/>
            </Trigger>
            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="expander" Property="Visibility"  Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="TreeViewItem" x:Key="RootNodeTreeViewItemContainerStyle">
        <!--<Setter Property="Foreground" Value="Green"/>-->
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Template" Value="{StaticResource RootNodeTreeViewItemContainerStyleTemplate}" />
        <!--<Setter Property="HorizontalAlignment" Value="Stretch" />-->
    </Style>

    <ControlTemplate x:Key="RootNodeTreeViewControlTemplate" TargetType="controls:RootNodeTreeView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" SnapsToDevicePixels="True">
            <!--<ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Background="{TemplateBinding Panel.Background}" Padding="{TemplateBinding Control.Padding}" Name="_tv_scrollviewer_" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False">
                <ItemsPresenter />
            </ScrollViewer>-->
            <StackPanel
                Background="{TemplateBinding Panel.Background}" 
                Name="_tv_scrollviewer_" 
                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False">
                <StackPanel x:Name="debugVars" Orientation="Horizontal" Visibility="Collapsed" >
                    <TextBlock Margin="4"  Background="{StaticResource RedBrush}">S</TextBlock>
                    <TextBlock Margin="4"  Background="{DynamicResource RedBrush}">D</TextBlock>
                    <TextBlock Margin="4"  Background="{DynamicResource {ComponentResourceKey
                            TypeInTargetAssembly={x:Type controls:NavBar},
                            ResourceId=RedCBrush}}">C</TextBlock>
                    <TextBlock Margin="4"  
                               Background="{DynamicResource {x:Static controls:CustomResources.DebugColorKey}}">X</TextBlock>
                </StackPanel>
                <ItemsPresenter />
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Debug" Value="True">
                <Setter TargetName="debugVars" Property="Visibility"  Value="Visible"/>
            </Trigger>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing">
                <Setter Property="ScrollViewer.CanContentScroll" TargetName="_tv_scrollviewer_">
                    <Setter.Value>
                        <s:Boolean>True</s:Boolean>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="controls:RootNodeTreeView" x:Key="NavBarItemTreeViewTemplate">
        <Style.Setters>
            <Setter Property="Debug" Value="{DynamicResource {x:Static controls:CustomResources.DebugKey}}"/>
            <Setter Property="Template" Value="{StaticResource RootNodeTreeViewControlTemplate}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource RootNodeTreeViewItemContainerStyle}"/>
            <Setter Property="ItemTemplate" Value="{StaticResource RootNodeTreeViewDataTemplate}"/>
            <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" />-->
            <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="TreeView.IsFocused" Value="True">
                <Setter Property="Border.BorderBrush" >
                    <Setter.Value>
                        <SolidColorBrush>#FFE68B2C</SolidColorBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- GroupItem -->

    <DataTemplate x:Key="GroupItemDataTemplate" DataType="x:Type controls:GroupItem">
        <Grid>
            <TextBlock Text="{Binding Path=.}" FontSize="24"/>
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="GroupItemControlTemplate1" TargetType="{x:Type controls:GroupItem}">
        <Border SnapsToDevicePixels="True">
            <Grid Margin="0,0,1,0">
                <Grid x:Name="Transform">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3,3,0,0"/>
                    <Border x:Name="HighlightBorder" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" Height="3" VerticalAlignment="Top"/>
                </Grid>
                <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{DynamicResource ControlBackgroundBrush}">
                    <ContentPresenter ContentTemplate="{StaticResource GroupItemDataTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" TargetName="HighlightBorder" Value="#FFE68B2C"/>
                <!--<Setter Property="Background" TargetName="HighlightBorder" Value="#FFFFC73C"/>-->
                <!--<Setter Property="Background" TargetName="Bd">
    				<Setter.Value>
    					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
    						<GradientStop Color="White" Offset="0"/>
    						<GradientStop Color="#FFECEBE6" Offset="1"/>
    					</LinearGradientBrush>
    				</Setter.Value>
    			</Setter>-->
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Panel.ZIndex" Value="1"/>
                <Setter Property="BorderBrush" TargetName="HighlightBorder" Value="#FFE68B2C"/>
                <Setter Property="Background" TargetName="HighlightBorder" Value="#FFFFC73C"/>
                <Setter Property="Background" TargetName="Bd" Value="#FFFCFCFE"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter Property="LayoutTransform" TargetName="Transform">
                    <Setter.Value>
                        <ScaleTransform ScaleY="-1" ScaleX="1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter Property="LayoutTransform" TargetName="Transform">
                    <Setter.Value>
                        <RotateTransform Angle="-90"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter Property="LayoutTransform" TargetName="Transform">
                    <Setter.Value>
                        <RotateTransform Angle="90"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                <Setter Property="Background" TargetName="Bd" Value="#FFF5F4EA"/>
                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFC9C7BA"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="TabStripPlacement" Value="Top"/>
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="-2,-2,-2,-1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="TabStripPlacement" Value="Bottom"/>
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="-2"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="TabStripPlacement" Value="Left"/>
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="-2,-2,-1,-2"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="TabStripPlacement" Value="Right"/>
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="-1,-2,-2,-2"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- NavBarItem-->

    <DataTemplate x:Key="NavBarItemContentTemplate">
        <StackPanel Orientation="Vertical">
            <!-- Caption - Header -->
            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}" HorizontalAlignment="Center"/>
            <!--<TextBlock Text="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" HorizontalAlignment="Center" FontSize="16" Background="Yellow"/>-->
            <!-- later bind this to the treeview content -->
            <!--<TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Nodes}"
                       HorizontalAlignment="Center" />-->

            <controls:RootNodeTreeView Style="{StaticResource NavBarItemTreeViewTemplate}"
                x:Name="PART_ContentTreeView" ItemsSource="{Binding}">
            </controls:RootNodeTreeView>
        </StackPanel>
    </DataTemplate>

    <ControlTemplate TargetType="controls:NavBarItem" x:Key="NavBarItemStyleControlTemplate" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Border SnapsToDevicePixels="True">
            <Grid Margin="0,0,1,0">
                <Grid Name="Transform">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="3,3,0,0" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" />
                    <Border BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" Name="HighlightBorder" Height="3" VerticalAlignment="Top" />
                </Grid>
                <!-- 
                            {TemplateBinding Border.BorderThickness} 
                            -->
                <!--<StackPanel DataContext="{TemplateBinding Nodes}">
                    <TextBlock Text="{Binding Length}" Background="Green" />
                    <TextBlock Text="{TemplateBinding TestString}" Background="Red" />
                </StackPanel>-->
                <Border Name="Bx" BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" Background="{DynamicResource ControlBackgroundBrush}">
                    <!-- 
                                ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" 
                                ContentTemplate="{StaticResource NavBarItemContentTemplate}"
                    Content="{TemplateBinding HeaderedContentControl.Header}" 
                    DataContext="{Binding Nodes}"
                                -->
                    <ContentPresenter Name="PART_ContentPresenter"
                                    Tag="{TemplateBinding HeaderedContentControl.Header}"
                                    RecognizesAccessKey="True"              
                                    Content="{TemplateBinding Nodes}" 
                                       
                                    ContentTemplate="{StaticResource NavBarItemContentTemplate}"
                                    ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" 
                                    ContentSource="Header" 
                                    HorizontalAlignment="Stretch" 
                                    VerticalAlignment="Stretch" 
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver">
                <Setter Property="Border.BorderBrush" TargetName="HighlightBorder">
                    <Setter.Value>
                        <SolidColorBrush>#FFE68B2C</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" TargetName="HighlightBorder">
                    <Setter.Value>
                        <SolidColorBrush>#FFFFC73C</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <!-- Todo: hier das verfickte hovering einstellen-->
                <!--<Setter Property="Panel.Background" TargetName="Bd">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#FF8FFFFF" Offset="0" />
                                <GradientStop Color="#FFECEBE6" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>-->
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="Selector.IsSelected">
                <Setter Property="Panel.ZIndex">
                    <Setter.Value>
                        <s:Int32>1</s:Int32>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="HighlightBorder">
                    <Setter.Value>
                        <SolidColorBrush>#FFE68B2C</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" TargetName="HighlightBorder">
                    <Setter.Value>
                        <SolidColorBrush>#FFFFC73C</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" TargetName="Bd">
                    <Setter.Value>
                        <SolidColorBrush>#FFFCFCFE</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <!--MOOO-->
                <!--<Setter Property="Background" TargetName="Bx" Value="{StaticResource SelectedBackgroundBrush}" />-->
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement">
                <Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="-1" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="Dock.Bottom" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement">
                <Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="Dock.Left" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement">
                <Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="Dock.Right" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled">
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" TargetName="Bd">
                    <Setter.Value>
                        <SolidColorBrush>#FFF5F4EA</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="Bd">
                    <Setter.Value>
                        <SolidColorBrush>#FFC9C7BA</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelected">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Top}" />
                </MultiTrigger.Conditions>
                <Setter Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>-2,-2,-2,-1</Thickness>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelected">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Bottom}" />
                </MultiTrigger.Conditions>
                <Setter Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>-2,-2,-2,-2</Thickness>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelected">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Left}" />
                </MultiTrigger.Conditions>
                <Setter Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>-2,-2,-1,-2</Thickness>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelected">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Right}" />
                </MultiTrigger.Conditions>
                <Setter Property="FrameworkElement.Margin">
                    <Setter.Value>
                        <Thickness>-1,-2,-2,-2</Thickness>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate TargetType="controls:NavBar" x:Key="NavBarStyleControlTemplate" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local" Background="{DynamicResource ControlBackgroundBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Name="ColumnDefinition0" />
                <ColumnDefinition Width="0" Name="ColumnDefinition1" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" Name="RowDefinition0" />
                <RowDefinition Height="*" Name="RowDefinition1" />
            </Grid.RowDefinitions>
            <ScrollViewer Name="PART_HeaderScroll" CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                <TabPanel IsItemsHost="True" Name="HeaderPanel" Margin="2,2,2,0" Panel.ZIndex="1"
                                      KeyboardNavigation.TabIndex="1" Grid.Column="0" Grid.Row="0" />
            </ScrollViewer>
            <Border BorderThickness="0,0,1,1" BorderBrush="#FFD0CEBF" Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="0" Grid.Row="1" Background="{DynamicResource ShadeBrush}">
                <!--{TemplateBinding Border.BorderThickness}-->
                <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}">
                    <Border >
                        <!-- Hier ist das problem. der content wird nicht gestretched-->
                        <ContentPresenter
                                        Content="{TemplateBinding TabControl.SelectedContent}"
                                        ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}"
                                        ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}" 
                                        ContentSource="SelectedContent" Name="PART_SelectedContentHost" 
                                        Margin="{TemplateBinding Control.Padding}" 
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                </Border>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TabControl.TabStripPlacement">
                <Setter Property="Grid.Row" TargetName="HeaderPanel">
                    <Setter.Value>
                        <s:Int32>1</s:Int32>
                    </Setter.Value>
                </Setter>
                <Setter Property="Grid.Row" TargetName="ContentPanel">
                    <Setter.Value>
                        <s:Int32>0</s:Int32>
                    </Setter.Value>
                </Setter>
                <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                    <Setter.Value>
                        <GridLength>*</GridLength>
                    </Setter.Value>
                </Setter>
                <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                    <Setter.Value>
                        <GridLength>Auto</GridLength>
                    </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                    <Setter.Value>
                        <Thickness>2,0,2,2</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#FFFCFCFE" Offset="0" />
                                <GradientStop Color="#FFF4F3EE" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="Dock.Bottom" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement">
                <Setter Property="Grid.Row" TargetName="HeaderPanel">
                    <Setter.Value>
                        <s:Int32>0</s:Int32>
                    </Setter.Value>
                </Setter>
                <Setter Property="Grid.Row" TargetName="ContentPanel">
                    <Setter.Value>
                        <s:Int32>0</s:Int32>
                    </Setter.Value>
                </Setter>
                <Setter Property="Grid.Column" TargetName="HeaderPanel">
                    <Setter.Value>
                        <s:Int32>0</s:Int32>
                    </Setter.Value>
                </Setter>
                <Setter Property="Grid.Column" TargetName="ContentPanel">
                    <Setter.Value>
                        <s:Int32>1</s:Int32>
                    </Setter.Value>
                </Setter>
                <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
                    <Setter.Value>
                        <GridLength>Auto</GridLength>
                    </Setter.Value>
                </Setter>
                <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
                    <Setter.Value>
                        <GridLength>*</GridLength>
                    </Setter.Value>
                </Setter>
                <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                    <Setter.Value>
                        <GridLength>*</GridLength>
                    </Setter.Value>
                </Setter>
                <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                    <Setter.Value>
                        <GridLength>0</GridLength>
                    </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                    <Setter.Value>
                        <Thickness>2,2,-1,2</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#FFFCFCFE" Offset="0" />
                                <GradientStop Color="#FFF4F3EE" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="Dock.Left" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement">
                <Setter Property="Grid.Row" TargetName="HeaderPanel">
                    <Setter.Value>
                        <s:Int32>0</s:Int32>
                    </Setter.Value>
                </Setter>
                <Setter Property="Grid.Row" TargetName="ContentPanel">
                    <Setter.Value>
                        <s:Int32>0</s:Int32>
                    </Setter.Value>
                </Setter>
                <Setter Property="Grid.Column" TargetName="HeaderPanel">
                    <Setter.Value>
                        <s:Int32>1</s:Int32>
                    </Setter.Value>
                </Setter>
                <Setter Property="Grid.Column" TargetName="ContentPanel">
                    <Setter.Value>
                        <s:Int32>0</s:Int32>
                    </Setter.Value>
                </Setter>
                <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
                    <Setter.Value>
                        <GridLength>*</GridLength>
                    </Setter.Value>
                </Setter>
                <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
                    <Setter.Value>
                        <GridLength>Auto</GridLength>
                    </Setter.Value>
                </Setter>
                <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                    <Setter.Value>
                        <GridLength>*</GridLength>
                    </Setter.Value>
                </Setter>
                <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                    <Setter.Value>
                        <GridLength>0</GridLength>
                    </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                    <Setter.Value>
                        <Thickness>-1,2,2,2</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#FFFCFCFE" Offset="0" />
                                <GradientStop Color="#FFF4F3EE" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="Dock.Right" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled">
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>




    <!-- Globals -->
    <!--
    <Style TargetType="TreeViewItem">
        <Setter Property="Template" Value="{StaticResource RootNodeTreeViewItemContainerStyleTemplate}" />
    </Style>

    -->
    <Style TargetType="controls:NavBarItem" x:Key="NavBarItemStyle">
        <Setter Property="Template" Value="{StaticResource NavBarItemStyleControlTemplate}"/>
    </Style>

    <Style TargetType="controls:NavBar" x:Key="NavBarStyle">
        <Setter Property="Template" Value="{StaticResource NavBarStyleControlTemplate}"/>
    </Style>





    <Style TargetType="{x:Type controls:GroupItem}" x:Key="GroupItemStyle">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="12,2"/>
        <Setter Property="BorderThickness" Value="1,1,1,0"/>
        <Setter Property="BorderBrush" Value="#FF919B9C"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template" Value="{StaticResource GroupItemControlTemplate1}"/>
        <Setter Property="IsEnabled" Value="False"/>
    </Style>

</ResourceDictionary>