//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:v2.0.50727
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/*
This code was automatically generated at 02/18/2012 18:38:25 by 
        Jedzia's ViewModel generator.
Changes to this file may be lost if regeneration occurs.
http://xxx.com
*/
// Config = Debug DefaultNamespace = Jedzia.BackBock.ViewModel

using System.Collections.Generic;
using Jedzia.BackBock.SharedTypes;
using Jedzia.BackBock.Model.Data;
using Jedzia.BackBock.ViewModel.MainWindow;


namespace Jedzia.BackBock.ViewModel.Data.Hierarchical
{

    /// <summary>
    /// The summary of ClassMemberViewModel. BaseType: 
    /// </summary>
    public partial class ClassMemberViewModel : DisplayModeViewModel
    {
        internal ClassMember classmember;

        public ClassMemberViewModel(ClassMember classMember)
        {
            this.classmember = classMember;
        }

        // Name. HasFacets: False AttrQName: 
        //                   propertyType: System.String, IsChoiceRoot: False, BaseType: 
        //                   ListType: None, HasCommonBaseType: False, xxxx: 
        /// <summary>
        /// Gets or sets the Name. HasFacets: False AttrQName: 
        /// </summary> // Attribute
        /// <value>The Name.</value>
        public System.String Name
        {
            get
            {
                return this.classmember.Name;
            }

            set
            {
                if (this.classmember.Name == value)
                {
                    return;
                }
                this.classmember.Name = value;
                RaisePropertyChanged("Name");
            }
        }

        protected virtual void OnDataPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)
        {
            DataPropertyChanged(sender, e);
        }

        partial void DataPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e);

        public ClassMemberViewModel Clone()
        {
            return (ClassMemberViewModel)this.MemberwiseClone();
        }
    } 
}
