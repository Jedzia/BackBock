//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:v2.0.50727
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/*
This code was automatically generated at 02/19/2012 01:11:16 by 
        Jedzia's ViewModel generator.
Changes to this file may be lost if regeneration occurs.
http://xxx.com
*/
// Config = Debug DefaultNamespace = Jedzia.BackBock.ViewModel

using System.Collections.Generic;
using Jedzia.BackBock.Model.Data;


namespace Jedzia.BackBock.ViewModel.Data
{

    /// <summary>
    /// The summary of ClassDataItemViewModel. BaseType: 
    /// </summary>
    public partial class ClassDataItemViewModel : ViewModelBase
    {
        internal ClassDataItem classdataitem;

        public ClassDataItemViewModel(ClassDataItem classDataItem)
        {
            this.classdataitem = classDataItem;
        }

        // ItemType. HasFacets: False AttrQName: 
        //                   propertyType: System.String, IsChoiceRoot: False, BaseType: 
        //                   ListType: None, HasCommonBaseType: False, xxxx: 
        /// <summary>
        /// Gets or sets the ItemType. HasFacets: False AttrQName: 
        /// </summary> // Attribute
        /// <value>The ItemType.</value>
        public System.String ItemType
        {
            get
            {
                return this.classdataitem.ItemType;
            }

            set
            {
                if (this.classdataitem.ItemType == value)
                {
                    return;
                }
                this.classdataitem.ItemType = value;
                RaisePropertyChanged("ItemType");
            }
        }

        // Name. HasFacets: False AttrQName: 
        //                   propertyType: System.String, IsChoiceRoot: False, BaseType: 
        //                   ListType: None, HasCommonBaseType: False, xxxx: 
        /// <summary>
        /// Gets or sets the Name. HasFacets: False AttrQName: 
        /// </summary> // Attribute
        /// <value>The Name.</value>
        public System.String Name
        {
            get
            {
                return this.classdataitem.Name;
            }

            set
            {
                if (this.classdataitem.Name == value)
                {
                    return;
                }
                this.classdataitem.Name = value;
                RaisePropertyChanged("Name");
            }
        }

        // Color. HasFacets: False AttrQName: 
        //                   propertyType: System.String, IsChoiceRoot: False, BaseType: 
        //                   ListType: None, HasCommonBaseType: False, xxxx: 
        /// <summary>
        /// Gets or sets the Color. HasFacets: False AttrQName: 
        /// </summary> // Attribute
        /// <value>The Color.</value>
        public System.String Color
        {
            get
            {
                return this.classdataitem.Color;
            }

            set
            {
                if (this.classdataitem.Color == value)
                {
                    return;
                }
                this.classdataitem.Color = value;
                RaisePropertyChanged("Color");
            }
        }

        // Scope. HasFacets: False AttrQName: 
        //                   propertyType: System.String, IsChoiceRoot: False, BaseType: 
        //                   ListType: None, HasCommonBaseType: False, xxxx: 
        /// <summary>
        /// Gets or sets the Scope. HasFacets: False AttrQName: 
        /// </summary> // Attribute
        /// <value>The Scope.</value>
        public System.String Scope
        {
            get
            {
                return this.classdataitem.Scope;
            }

            set
            {
                if (this.classdataitem.Scope == value)
                {
                    return;
                }
                this.classdataitem.Scope = value;
                RaisePropertyChanged("Scope");
            }
        }

        // AccessSpecifier. HasFacets: False AttrQName: 
        //                   propertyType: System.String, IsChoiceRoot: False, BaseType: 
        //                   ListType: None, HasCommonBaseType: False, xxxx: 
        /// <summary>
        /// Gets or sets the AccessSpecifier. HasFacets: False AttrQName: 
        /// </summary> // Attribute
        /// <value>The AccessSpecifier.</value>
        public System.String AccessSpecifier
        {
            get
            {
                return this.classdataitem.AccessSpecifier;
            }

            set
            {
                if (this.classdataitem.AccessSpecifier == value)
                {
                    return;
                }
                this.classdataitem.AccessSpecifier = value;
                RaisePropertyChanged("AccessSpecifier");
            }
        }

        // Static. HasFacets: False AttrQName: 
        //                   propertyType: System.Boolean, IsChoiceRoot: False, BaseType: 
        //                   ListType: None, HasCommonBaseType: False, xxxx: 
        /// <summary>
        /// Gets or sets the Static. HasFacets: False AttrQName: 
        /// </summary> // Attribute
        /// <value>The Static.</value>
        public System.Boolean Static
        {
            get
            {
                return this.classdataitem.Static;
            }

            set
            {
                if (this.classdataitem.Static == value)
                {
                    return;
                }
                this.classdataitem.Static = value;
                RaisePropertyChanged("Static");
            }
        }

        // Signature. HasFacets: False AttrQName: 
        //                   propertyType: System.String, IsChoiceRoot: False, BaseType: 
        //                   ListType: None, HasCommonBaseType: False, xxxx: 
        /// <summary>
        /// Gets or sets the Signature. HasFacets: False AttrQName: 
        /// </summary> // Attribute
        /// <value>The Signature.</value>
        public System.String Signature
        {
            get
            {
                return this.classdataitem.Signature;
            }

            set
            {
                if (this.classdataitem.Signature == value)
                {
                    return;
                }
                this.classdataitem.Signature = value;
                RaisePropertyChanged("Signature");
            }
        }

        // Parameternames. HasFacets: False AttrQName: 
        //                   propertyType: System.String, IsChoiceRoot: False, BaseType: 
        //                   ListType: None, HasCommonBaseType: False, xxxx: 
        /// <summary>
        /// Gets or sets the Parameternames. HasFacets: False AttrQName: 
        /// </summary> // Attribute
        /// <value>The Parameternames.</value>
        public System.String Parameternames
        {
            get
            {
                return this.classdataitem.Parameternames;
            }

            set
            {
                if (this.classdataitem.Parameternames == value)
                {
                    return;
                }
                this.classdataitem.Parameternames = value;
                RaisePropertyChanged("Parameternames");
            }
        }

        // ReturnType. HasFacets: False AttrQName: 
        //                   propertyType: System.String, IsChoiceRoot: False, BaseType: 
        //                   ListType: None, HasCommonBaseType: False, xxxx: 
        /// <summary>
        /// Gets or sets the ReturnType. HasFacets: False AttrQName: 
        /// </summary> // Attribute
        /// <value>The ReturnType.</value>
        public System.String ReturnType
        {
            get
            {
                return this.classdataitem.ReturnType;
            }

            set
            {
                if (this.classdataitem.ReturnType == value)
                {
                    return;
                }
                this.classdataitem.ReturnType = value;
                RaisePropertyChanged("ReturnType");
            }
        }

        // IsConstructor. HasFacets: False AttrQName: 
        //                   propertyType: System.Boolean, IsChoiceRoot: False, BaseType: 
        //                   ListType: None, HasCommonBaseType: False, xxxx: 
        /// <summary>
        /// Gets or sets the IsConstructor. HasFacets: False AttrQName: 
        /// </summary> // Attribute
        /// <value>The IsConstructor.</value>
        public System.Boolean IsConstructor
        {
            get
            {
                return this.classdataitem.IsConstructor;
            }

            set
            {
                if (this.classdataitem.IsConstructor == value)
                {
                    return;
                }
                this.classdataitem.IsConstructor = value;
                RaisePropertyChanged("IsConstructor");
            }
        }

        // DisplayData. HasFacets: False AttrQName: 
        //                   propertyType: System.String, IsChoiceRoot: False, BaseType: 
        //                   ListType: None, HasCommonBaseType: False, xxxx: 
        /// <summary>
        /// Gets or sets the DisplayData. HasFacets: False AttrQName: 
        /// </summary> // Attribute
        /// <value>The DisplayData.</value>
        public System.String DisplayData
        {
            get
            {
                return this.classdataitem.DisplayData;
            }

            set
            {
                if (this.classdataitem.DisplayData == value)
                {
                    return;
                }
                this.classdataitem.DisplayData = value;
                RaisePropertyChanged("DisplayData");
            }
        }

        protected virtual void OnDataPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)
        {
            DataPropertyChanged(sender, e);
        }

        partial void DataPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e);

        public ClassDataItemViewModel Clone()
        {
            return (ClassDataItemViewModel)this.MemberwiseClone();
        }
    } 
}
