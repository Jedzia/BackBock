<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by Venom (ICO) -->
<!--W3C Schema generated by XMLSpy v2011 rel. 2 (http://www.altova.com)-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="ClassData">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="DerivedFrom" type="Derive"/>
        <xs:element name="Fields" type="Field"/>
        <xs:element name="Properties" type="Property"/>
        <xs:element name="Methods" type="Method"/>
        <xs:element name="Specification" type="SpecificationType"/>
      </xs:choice>
      <xs:attribute name="Name" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:attribute name="ValueType">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="string"/>
        <xs:enumeration value="int"/>
        <xs:enumeration value="object"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:simpleType name="ScopeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="public"/>
      <xs:enumeration value="protected"/>
      <xs:enumeration value="private"/>
      <xs:enumeration value="internal"/>
      <xs:enumeration value="fucked"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="ReturnType">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="string"/>
        <xs:enumeration value="int"/>
        <xs:enumeration value="object"/>
        <xs:enumeration value="void"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:complexType name="Field">
    <xs:complexContent>
      <xs:extension base="ClassMember">
        <xs:attribute ref="ValueType" use="required"/>
        <xs:attribute name="IsStatic" type="xs:boolean" default="false"/>
        <xs:attribute name="Scope" type="ScopeType" default="public"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Property">
    <xs:complexContent>
      <xs:extension base="ClassMember">
        <xs:attribute ref="ValueType" use="required"/>
        <xs:attribute name="Scope" type="ScopeType" default="public"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Method">
    <xs:complexContent>
      <xs:extension base="ClassMember">
        <xs:attribute name="Signature" type="xs:string" default="void"/>
        <xs:attribute name="Scope" type="ScopeType" default="public"/>
        <xs:attribute ref="ReturnType" use="required"/>
        <xs:attribute name="Parameternames" type="xs:string">
          <!--<xs:simpleType>
				<xs:list itemType="xs:string"/>
			</xs:simpleType>-->
        </xs:attribute>
        <xs:attribute name="IsConstructor" type="xs:boolean" default="false"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Derive">
    <xs:complexContent>
      <xs:extension base="ClassMember">
        <xs:attribute name="Test"/>
        <xs:attribute name="Nix" type="xs:boolean"/>
        <xs:attributeGroup ref="myGroup" id="ddd"/>
        <xs:attribute name="IsInterface" type="xs:boolean"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:attributeGroup name="myGroup">
    <xs:attribute name="Rotz" type="xs:boolean"/>
    <xs:attribute name="Blafasel" type="xs:dateTime"/>
  </xs:attributeGroup>
  <xs:complexType name="SpecificationType">
    <xs:complexContent>
      <xs:extension base="ClassMember">
        <xs:attribute name="Specs" type="xs:double"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ClassMember">
    <xs:attribute name="Name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="Randale">
    <xs:attribute name="Name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:element name="Randale" type="Randale"/>
</xs:schema>
